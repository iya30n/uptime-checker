openapi: 3.0.0
info:
  title: Uptime Checker
  version: 1.0.0
servers:
  - url: http://0.0.0.0:7000
paths:
  /auth/register:
    post:
      tags:
        - default
      summary: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: test
                family: test family
                email: test@gmail.com
                username: test
                password: test021
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /auth/verify:
    post:
      tags:
        - default
      summary: verify account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: test@gmail.com
                code: 10863
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /auth/login:
    post:
      tags:
        - default
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: test
                password: test021
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /auth/resend-otp:
    post:
      tags:
        - default
      summary: resend otp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: test@gmail.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /auth/refresh-token:
    post:
      tags:
        - default
      summary: refresh token
      requestBody:
        content: {}
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /website:
    get:
      tags:
        - website
      summary: list
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - website
      summary: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: yahoo
                url: https://www.yahoo.com
                check_time: 10m
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /website/:id:
    put:
      tags:
        - website
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: gogoli
                url: https://www.google.com
                check_time: 10m
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /website/:website_id:
    delete:
      tags:
        - website
      summary: delete
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
